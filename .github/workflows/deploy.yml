name: Deploy Terraform & DeepSeek Model R1

on:
  push:
    branches:
      - main  # Change to any branch if needed

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Provision Infra & Deploy Model
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::242201266221:role/GitHubActionsTerraformRole
          role-session-name: GitHubActions
          aws-region: us-east-1  # Change to your preferred region

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7  # Use the required Terraform version

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Retrieve EC2 Public IP
        id: get-ec2-ip
        run: |
          PRIVATE_KEY=$(cat terraform-project/deepseek-ec2-key.pem)
          echo "PRIVATE_KEY=$PRIVATE_KEY" >> $GITHUB_ENV
          PUBLIC_IP=$(terraform output -raw ec2_public_ip) # Ensure this is set in outputs
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Wait for EC2 Instance to Be Ready
        run: sleep 60  # Wait for the instance to initialize

      - name: Install AWS Systems Manager (SSM) Plugin
        run: |
          sudo snap install amazon-ssm-agent --classic
          sudo snap start amazon-ssm-agent

      - name: Run Docker on EC2 (SSM)
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceIds,Values=$INSTANCE_ID" \
            --parameters 'commands=["sudo apt update && sudo apt install -y docker.io", "sudo systemctl start docker", "sudo docker pull deepseek-ai/deepseek-llm-r1", "sudo docker run -d -p 8080:8080 deepseek-ai/deepseek-llm-r1"]' \
            --comment "Deploy DeepSeek Model R1"

      - name: Verify Deployment
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://$PUBLIC_IP:8080)
          if [ "$RESPONSE" -ne 200 ]; then
            echo "Deployment failed!"
            exit 1
          else
            echo "Deployment successful!"
          fi
 
